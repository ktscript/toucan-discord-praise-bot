/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ToucanPraiseToken,
  ToucanPraiseTokenInterface,
} from "../ToucanPraiseToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280601181526020017f546f7563616e507261697365546f6b656e0000000000000000000000000000008152506040518060400160405280600381526020017f545054000000000000000000000000000000000000000000000000000000000081525081600390805190602001906200009692919062000257565b508060049080519060200190620000af92919062000257565b505050620000ce3369021e19e0c9bab2400000620000d460201b60201c565b620004b3565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000147576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200013e906200033f565b60405180910390fd5b6200015b600083836200024d60201b60201c565b80600260008282546200016f91906200038f565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001c691906200038f565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200022d919062000361565b60405180910390a362000249600083836200025260201b60201c565b5050565b505050565b505050565b8280546200026590620003f6565b90600052602060002090601f016020900481019282620002895760008555620002d5565b82601f10620002a457805160ff1916838001178555620002d5565b82800160010185558215620002d5579182015b82811115620002d4578251825591602001919060010190620002b7565b5b509050620002e49190620002e8565b5090565b5b8082111562000303576000816000905550600101620002e9565b5090565b600062000316601f836200037e565b915062000323826200048a565b602082019050919050565b6200033981620003ec565b82525050565b600060208201905081810360008301526200035a8162000307565b9050919050565b60006020820190506200037860008301846200032e565b92915050565b600082825260208201905092915050565b60006200039c82620003ec565b9150620003a983620003ec565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620003e157620003e06200042c565b5b828201905092915050565b6000819050919050565b600060028204905060018216806200040f57607f821691505b602082108114156200042657620004256200045b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6113cc80620004c36000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063574d6bb111610071578063574d6bb1146101a357806370a08231146101c157806395d89b41146101f1578063a457c2d71461020f578063a9059cbb1461023f578063dd62ed3e1461026f576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161029f565b6040516100ce9190610e6c565b60405180910390f35b6100f160048036038101906100ec9190610cba565b610331565b6040516100fe9190610e51565b60405180910390f35b61010f61034f565b60405161011c9190610f6e565b60405180910390f35b61013f600480360381019061013a9190610c6b565b610359565b60405161014c9190610e51565b60405180910390f35b61015d610451565b60405161016a9190610f89565b60405180910390f35b61018d60048036038101906101889190610cba565b61045a565b60405161019a9190610e51565b60405180910390f35b6101ab610506565b6040516101b89190610f6e565b60405180910390f35b6101db60048036038101906101d69190610c06565b610514565b6040516101e89190610f6e565b60405180910390f35b6101f961055c565b6040516102069190610e6c565b60405180910390f35b61022960048036038101906102249190610cba565b6105ee565b6040516102369190610e51565b60405180910390f35b61025960048036038101906102549190610cba565b6106d9565b6040516102669190610e51565b60405180910390f35b61028960048036038101906102849190610c2f565b6106f7565b6040516102969190610f6e565b60405180910390f35b6060600380546102ae9061109e565b80601f01602080910402602001604051908101604052809291908181526020018280546102da9061109e565b80156103275780601f106102fc57610100808354040283529160200191610327565b820191906000526020600020905b81548152906001019060200180831161030a57829003601f168201915b5050505050905090565b600061034561033e61077e565b8484610786565b6001905092915050565b6000600254905090565b6000610366848484610951565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103b161077e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610431576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042890610eee565b60405180910390fd5b6104458561043d61077e565b858403610786565b60019150509392505050565b60006012905090565b60006104fc61046761077e565b84846001600061047561077e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104f79190610fc0565b610786565b6001905092915050565b69021e19e0c9bab240000081565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461056b9061109e565b80601f01602080910402602001604051908101604052809291908181526020018280546105979061109e565b80156105e45780601f106105b9576101008083540402835291602001916105e4565b820191906000526020600020905b8154815290600101906020018083116105c757829003601f168201915b5050505050905090565b600080600160006105fd61077e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156106ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b190610f4e565b60405180910390fd5b6106ce6106c561077e565b85858403610786565b600191505092915050565b60006106ed6106e661077e565b8484610951565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ed90610f2e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610866576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085d90610eae565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109449190610f6e565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b890610f0e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2890610e8e565b60405180910390fd5b610a3c838383610bd2565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ac2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab990610ece565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b559190610fc0565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bb99190610f6e565b60405180910390a3610bcc848484610bd7565b50505050565b505050565b505050565b600081359050610beb81611368565b92915050565b600081359050610c008161137f565b92915050565b600060208284031215610c1857600080fd5b6000610c2684828501610bdc565b91505092915050565b60008060408385031215610c4257600080fd5b6000610c5085828601610bdc565b9250506020610c6185828601610bdc565b9150509250929050565b600080600060608486031215610c8057600080fd5b6000610c8e86828701610bdc565b9350506020610c9f86828701610bdc565b9250506040610cb086828701610bf1565b9150509250925092565b60008060408385031215610ccd57600080fd5b6000610cdb85828601610bdc565b9250506020610cec85828601610bf1565b9150509250929050565b610cff81611028565b82525050565b6000610d1082610fa4565b610d1a8185610faf565b9350610d2a81856020860161106b565b610d338161112e565b840191505092915050565b6000610d4b602383610faf565b9150610d568261113f565b604082019050919050565b6000610d6e602283610faf565b9150610d798261118e565b604082019050919050565b6000610d91602683610faf565b9150610d9c826111dd565b604082019050919050565b6000610db4602883610faf565b9150610dbf8261122c565b604082019050919050565b6000610dd7602583610faf565b9150610de28261127b565b604082019050919050565b6000610dfa602483610faf565b9150610e05826112ca565b604082019050919050565b6000610e1d602583610faf565b9150610e2882611319565b604082019050919050565b610e3c81611054565b82525050565b610e4b8161105e565b82525050565b6000602082019050610e666000830184610cf6565b92915050565b60006020820190508181036000830152610e868184610d05565b905092915050565b60006020820190508181036000830152610ea781610d3e565b9050919050565b60006020820190508181036000830152610ec781610d61565b9050919050565b60006020820190508181036000830152610ee781610d84565b9050919050565b60006020820190508181036000830152610f0781610da7565b9050919050565b60006020820190508181036000830152610f2781610dca565b9050919050565b60006020820190508181036000830152610f4781610ded565b9050919050565b60006020820190508181036000830152610f6781610e10565b9050919050565b6000602082019050610f836000830184610e33565b92915050565b6000602082019050610f9e6000830184610e42565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610fcb82611054565b9150610fd683611054565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561100b5761100a6110d0565b5b828201905092915050565b600061102182611034565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561108957808201518184015260208101905061106e565b83811115611098576000848401525b50505050565b600060028204905060018216806110b657607f821691505b602082108114156110ca576110c96110ff565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61137181611016565b811461137c57600080fd5b50565b61138881611054565b811461139357600080fd5b5056fea26469706673582212208fad38a74dc963adb64f99316baf581f4b498acbf6900ad870ef02f3d8b91f4c64736f6c63430008040033";

type ToucanPraiseTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ToucanPraiseTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ToucanPraiseToken__factory extends ContractFactory {
  constructor(...args: ToucanPraiseTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ToucanPraiseToken> {
    return super.deploy(overrides || {}) as Promise<ToucanPraiseToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ToucanPraiseToken {
    return super.attach(address) as ToucanPraiseToken;
  }
  connect(signer: Signer): ToucanPraiseToken__factory {
    return super.connect(signer) as ToucanPraiseToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ToucanPraiseTokenInterface {
    return new utils.Interface(_abi) as ToucanPraiseTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ToucanPraiseToken {
    return new Contract(address, _abi, signerOrProvider) as ToucanPraiseToken;
  }
}
